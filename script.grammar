statement: <for> | <if> | <assign> | <expression>;

for : "for" <ident> "in" <number> <range>? <by>? <block>;

range: /\.\.\.?/ <number>;

by: "by" <number>;

if : "if" <expression> <block>;

assign : <ident> '=' <expression>;

expression: <or>;

ident: /[a-zA-Z_][a-zA-Z_0-9]*/;

number: <boolean> | <hex> | <decimal>;

hex: /0x[0-9a-f]+/;

decimal: /[0-9]+/;

boolean: "true" | "false";

or : <and> ( "||" <and> )*;

and : <equality> ( "&&" <equality> )*;

equality : <comparison> ( ("==" | "!=") <comparison> )*;

comparison : <sum> ( ("<=" | ">=" | '<' | '>') <sum> )*;

sum : <product> ( ('+' | '-') <product> )*;

product : <not> ( ('*' | '/' | '%') <not> )*;

not: '!' <value> | <value>;

call:  <ident> '(' <statement> (',' <statement>)* ')';

value : <number> | <call> | <ident> | '(' <statement> ')';

block: '{' <statement>* '}';

program : /^/ <statement>* /$/;
